# -*- coding: utf-8 -*-
"""Inventory-Management-System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1txZyyolf67xikP2fUArIZ2SMdxRWweL0
"""

item={195460: {'PName':'5star', 'Price': 5, 'Quantity': 150, 'Expiry': '12 21', 'Category':'Chocolates'},
      195461: {'PName':'Amul Dark Chocolate', 'Price': 100, 'Quantity': 200, 'Expiry': '06 22', 'Category':'Chocolates'},
      195462: {'PName':'Cadbury Fuse Chocolate', 'Price': 20, 'Quantity': 200, 'Expiry': '06 22', 'Category':'Chocolates'},
      195463: {'PName':'Snickers Chocolate', 'Price': 20, 'Quantity': 200, 'Expiry': '08 22', 'Category':'Chocolates'},
      195464: {'PName':'kitkat', 'Price': 20, 'Quantity': 200, 'Expiry': '09 22', 'Category':'Chocolates'},
      195465: {'PName':'Ferrero Rocher', 'Price':250, 'Quantity': 200, 'Expiry': '11 22', 'Category':'Chocolates'},
      195466: {'PName':'Campco', 'Price':50, 'Quantity': 500, 'Expiry': '11 23', 'Category':'Chocolates'},
      195467: {'PName':'Munch', 'Price':10, 'Quantity': 400, 'Expiry': '2021-09-03', 'Category':'Chocolates'},
      195468: {'PName':'Hide & Seek', 'Price':40, 'Quantity': 200, 'Expiry': '1 22', 'Category':'Chocolates'},
      195469: {'PName':'Bar one', 'Price':25, 'Quantity': 551, 'Expiry': '3 22', 'Category':'Chocolates'},
      195470: {'PName':'Lotus Dark Chocolate', 'Price':200, 'Quantity': 25, 'Expiry': '4 22', 'Category':'Chocolates'},
      195471: {'PName':'Lotus milk Chocolate', 'Price':200, 'Quantity': 55, 'Expiry': '5 23', 'Category':'Chocolates'},
      195472: {'PName':'NIRMA', 'Price':18, 'Quantity': 1000, 'Expiry': '5 23', 'Category':'Soap'},
      195473: {'PName':'LUX', 'Price':45, 'Quantity': 250, 'Expiry': '9 22', 'Category':'Soap'},
      195474: {'PName':'Himalaya', 'Price':34, 'Quantity': 100, 'Expiry': '5 22', 'Category':' Bath Soap'},
      195475: {'PName':'Cinthol Cool', 'Price':39, 'Quantity': 150, 'Expiry': '5 23', 'Category':'Bath Soap'},
      195476: {'PName':'Godrej No 1', 'Price':20, 'Quantity': 800, 'Expiry': '5 24', 'Category':' Bath Soap'},
      195477: {'PName':'Jhonson baby', 'Price':50, 'Quantity': 100, 'Expiry': '7 23', 'Category':'Bath Soap'},
      195478: {'PName':'Surf excel', 'Price':28, 'Quantity': 250, 'Expiry': '9 23', 'Category':' Washing Soap'},
      195479: {'PName':'Tide', 'Price':23, 'Quantity': 300, 'Expiry': '4 22', 'Category':' Washing Soap'},
      195480: {'PName':'Nirma', 'Price':10, 'Quantity': 1000, 'Expiry': '7 25', 'Category':' Washing Soap'},
      195481: {'PName':'Fena', 'Price':10, 'Quantity': 1000, 'Expiry': '5 25', 'Category':' Washiing Soap'},  
      195482: {'PName':'Vim bar', 'Price':12,'Quantity': 500, 'Expiry': '9 24', 'Category':' Washing Soap'},
      195483: {'PName':'Rin', 'Price':21 ,'Quantity': 250, 'Expiry': '9 23', 'Category':' Washing Soap'},
      195484: {'PName':'Wheel', 'Price':16,'Quantity': 250, 'Expiry': '9 23', 'Category':' Washing Soap'},
      195485: {'PName':'close up', 'Price':95, 'Quantity':90, 'Expiry': '8,22', 'Category':' Tooth Paste'},
      195486: {'PName':'Pepsodent', 'Price':75, 'Quantity':105, 'Expiry': '5 23', 'Category':' Tooth Paste'},
      195487: {'PName':'colgate', 'Price':60, 'Quantity':450, 'Expiry': '6 22', 'Category':' Tooth Paste'},
      195488: {'PName':'Dabur Red', 'Price':105, 'Quantity':650, 'Expiry': '9 23', 'Category':' Tooth Paste'},
      195489: {'PName':'Patanjali', 'Price':65, 'Quantity':230, 'Expiry': '4 23', 'Category':' Tooth Paste'},
      195490: {'PName':'Sensodyne Fresh Mint', 'Price':12, 'Quantity':50, 'Expiry': '10 22', 'Category':' Tooth Paste'},
  }

"""**Add New Item into Inventory**"""

prod_id = len(item)+195460
PName = str(input("Enter name:"))
Price = int(input("Enter price:"))
Quantity = int(input("Enter quantity:"))
Expiry = str(input("Enter Expiry:"))
Category = str(input("Enter Category:"))

item[prod_id] = {'PName': PName, 'Price': Price, 'Quantity': Quantity, 'Expiry': Expiry, 'Category': Category}

js = json.dumps(item)

fd = open("item.json",'w')
fd.write(js)
fd.close()

"""**view products**"""

def view_product():
    with open('item.json','r') as itm:
        data=json.load(itm)
        itm.close()
        print('Product ID Product Name \t  Category \t\tBrand')
        print("-" *75)
        for product_id, product in data['PName'].items():
            print(f"{product_id : <10} ",f"{item['PName']: <22}",f"{item['Price']: <20}",f"{item['Category']: <15}")

import json

js = json.dumps(item)

fd=open('item.json','w')
fd.write(js)
fd.close()

fd=open('item.json','r')
fd.read()
fd.close()

"""**sales**"""

import time
import uuid 
def sales(i,q,payment):
  t=time.ctime()
  print(t)
  print("Transaction id: " + str(uuid.uuid1()))
  print("Product Name: " +item[i]["PName"])
  print("Quantity Sold: ", q)
  print("Amount: Rs ", payment)

"""**Main**"""

view_product

from datetime import date
pn=input("enter the name of product which you want? ")
q=int(input("enter the qunatity of product "))
b=True
for i in item.keys():
  a=True
  if pn.lower()==item[i]["PName"].lower():
    print("Yes Product is availabel")

    if item[i]["Quantity"]>=q:
      item[i]["Quantity"]=item[i]["Quantity"]-q
      break
    else:
      print("We don't have that much quantity")
      b=False
  else:
    a=False


if a==True or b!=False:
  print("\n Your bill is generated")
  
  print("Product       Quantity  Price")
  print(item[i]["PName"]+"\t"+str(q)+"\t"+str(item[i]["Price"]))
  payment=item[i]["Price"]*q
  print("total amount you have to pay is: ",payment)
  sales(i,q,payment)
if a==False or b!=False:
  print("Wrong product name")

fd=open('sales.json','w')
fd.append(sl)
fd.close()